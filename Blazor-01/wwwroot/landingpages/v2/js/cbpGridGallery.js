!function (t) { "use strict"; var e = t.document.documentElement, s = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd", msTransition: "MSTransitionEnd", transition: "transitionend" }[Modernizr.prefixed("transition")], i = { transitions: Modernizr.csstransitions, support3d: Modernizr.csstransforms3d }; function r(t, e) { t.style.WebkitTransform = e, t.style.msTransform = e, t.style.transform = e } function n() { var s = e.clientWidth, i = t.innerWidth; return s < i ? i : s } function o(t, e) { for (var s in e) e.hasOwnProperty(s) && (t[s] = e[s]); return t } function a(t, e) { this.el = t, this.options = o({}, this.options), o(this.options, e), this._init() } a.prototype.options = {}, a.prototype._init = function () { this.grid = this.el.querySelector(".grid-wrap > ul.gridlist"), this.gridItems = [].slice.call(this.grid.querySelectorAll("li:not(.grid-sizer)")), this.itemsCount = this.gridItems.length, this.slideshow = this.el.querySelector(".slideshow > ul"), this.slideshowItems = [].slice.call(this.slideshow.children), this.current = -1, this.ctrlPrev = this.el.querySelector(".slideshow > nav > span.nav-prev"), this.ctrlNext = this.el.querySelector(".slideshow > nav > span.nav-next"), this.ctrlClose = this.el.querySelector(".slideshow > nav > span.nav-close"), this._initMasonry(), this._initEvents() }, a.prototype._initMasonry = function () { var t = this.grid; imagesLoaded(t, function () { new Masonry(t, { itemSelector: "li", columnWidth: t.querySelector(".grid-sizer") }) }) }, a.prototype._initEvents = function () { var s = this; this.gridItems.forEach(function (t, e) { t.addEventListener("click", function () { s._openSlideshow(e) }) }), this.ctrlPrev.addEventListener("click", function () { s._navigate("prev") }), this.ctrlNext.addEventListener("click", function () { s._navigate("next") }), this.ctrlClose.addEventListener("click", function () { s._closeSlideshow() }), t.addEventListener("resize", function () { s._resizeHandler() }), document.addEventListener("keydown", function (t) { if (s.isSlideshowVisible) { var e = t.keyCode || t.which; switch (e) { case 37: s._navigate("prev"); break; case 39: s._navigate("next"); break; case 27: s._closeSlideshow() } } }), t.addEventListener("scroll", function () { s.isSlideshowVisible ? t.scrollTo(s.scrollPosition ? s.scrollPosition.x : 0, s.scrollPosition ? s.scrollPosition.y : 0) : s.scrollPosition = { x: t.pageXOffset || e.scrollLeft, y: t.pageYOffset || e.scrollTop } }) }, a.prototype._openSlideshow = function (t) { if (this.isSlideshowVisible = !0, this.current = t, classie.addClass(this.el, "slideshow-open"), this._setViewportItems(), classie.addClass(this.currentItem, "current"), classie.addClass(this.currentItem, "show"), this.prevItem) { classie.addClass(this.prevItem, "show"); var e = Number(-1 * (n() / 2 + this.prevItem.offsetWidth / 2)); r(this.prevItem, i.support3d ? "translate3d(" + e + "px, 0, -150px)" : "translate(" + e + "px)") } if (this.nextItem) { classie.addClass(this.nextItem, "show"); var e = Number(n() / 2 + this.nextItem.offsetWidth / 2); r(this.nextItem, i.support3d ? "translate3d(" + e + "px, 0, -150px)" : "translate(" + e + "px)") } }, a.prototype._navigate = function (t) { if (!this.isAnimating) { if ("next" === t && this.current === this.itemsCount - 1 || "prev" === t && 0 === this.current) { this._closeSlideshow(); return } this.isAnimating = !0, this._setViewportItems(); var e, o, a, l = this, h = this.currentItem.offsetWidth, p = i.support3d ? "translate3d(-" + Number(n() / 2 + h / 2) + "px, 0, -150px)" : "translate(-" + Number(n() / 2 + h / 2) + "px)", c = i.support3d ? "translate3d(" + Number(n() / 2 + h / 2) + "px, 0, -150px)" : "translate(" + Number(n() / 2 + h / 2) + "px)"; "next" === t ? (e = i.support3d ? "translate3d( -" + Number(2 * n() / 2 + h / 2) + "px, 0, -150px )" : "translate(-" + Number(2 * n() / 2 + h / 2) + "px)", o = i.support3d ? "translate3d( " + Number(2 * n() / 2 + h / 2) + "px, 0, -150px )" : "translate(" + Number(2 * n() / 2 + h / 2) + "px)") : (e = i.support3d ? "translate3d( " + Number(2 * n() / 2 + h / 2) + "px, 0, -150px )" : "translate(" + Number(2 * n() / 2 + h / 2) + "px)", o = i.support3d ? "translate3d( -" + Number(2 * n() / 2 + h / 2) + "px, 0, -150px )" : "translate(-" + Number(2 * n() / 2 + h / 2) + "px)"), classie.removeClass(l.slideshow, "animatable"), ("next" === t && this.current < this.itemsCount - 2 || "prev" === t && this.current > 1) && (r(a = this.slideshowItems["next" === t ? this.current + 2 : this.current - 2], o), classie.addClass(a, "show")), setTimeout(function () { classie.addClass(l.slideshow, "animatable"), classie.removeClass(l.currentItem, "current"); var n = "next" === t ? l.nextItem : l.prevItem; classie.addClass(n, "current"), r(l.currentItem, "next" === t ? p : c), l.nextItem && r(l.nextItem, "next" === t ? "" : e), l.prevItem && r(l.prevItem, "next" === t ? e : ""), a && r(a, "next" === t ? c : p); var o = function (e) { if (i.transitions) { if (-1 === e.propertyName.indexOf("transform")) return !1; this.removeEventListener(s, o) } l.prevItem && "next" === t ? classie.removeClass(l.prevItem, "show") : l.nextItem && "prev" === t && classie.removeClass(l.nextItem, "show"), "next" === t ? (l.prevItem = l.currentItem, l.currentItem = l.nextItem, a && (l.nextItem = a)) : (l.nextItem = l.currentItem, l.currentItem = l.prevItem, a && (l.prevItem = a)), l.current = "next" === t ? l.current + 1 : l.current - 1, l.isAnimating = !1 }; i.transitions ? l.currentItem.addEventListener(s, o) : o() }, 25) } }, a.prototype._closeSlideshow = function (t) { classie.removeClass(this.el, "slideshow-open"), classie.removeClass(this.slideshow, "animatable"); var e = this, n = function (t) { if (i.transitions) { if ("ul" !== t.target.tagName.toLowerCase()) return; this.removeEventListener(s, n) } classie.removeClass(e.currentItem, "current"), classie.removeClass(e.currentItem, "show"), e.prevItem && classie.removeClass(e.prevItem, "show"), e.nextItem && classie.removeClass(e.nextItem, "show"), e.slideshowItems.forEach(function (t) { r(t, "") }), e.isSlideshowVisible = !1 }; i.transitions ? this.el.addEventListener(s, n) : n() }, a.prototype._setViewportItems = function () { this.currentItem = null, this.prevItem = null, this.nextItem = null, this.current > 0 && (this.prevItem = this.slideshowItems[this.current - 1]), this.current < this.itemsCount - 1 && (this.nextItem = this.slideshowItems[this.current + 1]), this.currentItem = this.slideshowItems[this.current] }, a.prototype._resizeHandler = function () { var t = this; this._resizeTimeout && clearTimeout(this._resizeTimeout), this._resizeTimeout = setTimeout(function e() { t._resize(), t._resizeTimeout = null }, 50) }, a.prototype._resize = function () { if (this.isSlideshowVisible) { if (this.prevItem) { var t = Number(-1 * (n() / 2 + this.prevItem.offsetWidth / 2)); r(this.prevItem, i.support3d ? "translate3d(" + t + "px, 0, -150px)" : "translate(" + t + "px)") } if (this.nextItem) { var t = Number(n() / 2 + this.nextItem.offsetWidth / 2); r(this.nextItem, i.support3d ? "translate3d(" + t + "px, 0, -150px)" : "translate(" + t + "px)") } } }, t.CBPGridGallery = a }(window);